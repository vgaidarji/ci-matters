apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply from: 'config/quality.gradle'
apply from: 'config/jacoco.gradle'
//apply from: 'config/coveralls.gradle'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

def defaultVersionCode = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
def defaultVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"
def defaultVersionNameShort = "${versionMajor}.${versionMinor}"

/**
 * Get the version code from command line param
 * Example usage: gradle tasks -PversionCode=999
 *
 * @return int If the param -PversionCode is present then return int value or default version code
 */
def getVersionCode = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : defaultVersionCode
    println "VersionCode is set to $code"
    return code
}

/**
 * Get the version name from command line param
 * Example usage: gradle tasks -PversionName=1.999
 *
 * @return String If the param -PversionName is present then return String value or default version name
 */
def getVersionName = { ->
    def defVersionName = versionPatch > 0 ? defaultVersionName : defaultVersionNameShort
    def name = project.hasProperty('versionName') ? versionName.toString() : defVersionName
    println "VersionName is set to " + name
    return name
}

android {
    compileSdk 34
    defaultConfig {
        applicationId "com.vgaidarji.cimatters"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode getVersionCode()
        versionName getVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    namespace 'com.vgaidarji.cimatters'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    // todo: firebase app distribution
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
