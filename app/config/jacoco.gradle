apply plugin: 'jacoco'

ext {
    coverageSourceDirs = 'src/test/java'
}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = file("$buildDir/reports")
}

task jacocoTestReport(type:JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"
    classDirectories = fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewBinder*.*',
                       '**/*$InjectAdapter*.*',
                       '**/*Injector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/*Test*.*',
                       '**/*Activity*.*',
                       '**/CiMattersApplication*.*',
                       'android/**/*.*']
    )
    if (project.hasProperty("teamcity")) {
        println '##teamcity[jacocoReport dataPath=\'app/build/jacoco/testDebugUnitTest.exec\' includes=\'com.vgaidarji.cimatters.*\' excludes=\'com.vgaidarji.cimatters.test.* **/*R*.* **/*Injector*.* **/*Activity*.* .*R .*CiMattersApplication .*BuildConfig .*Activity .*Test \']'
    }
    reports {
        xml.required = true
        html.required = true
    }
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/testDebugUnitTest.exec")
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
    }
}
