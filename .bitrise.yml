---
format_version: '13'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: android
meta:
  bitrise.io:
    stack: linux-docker-android-22.04
    machine_type_id: standard
pipelines:
  pipelineBuildTestDistribute:
    stages:
      - stageBuildTestDistribute: {}
stages:
  stageBuildTestDistribute:
    workflows:
      - build: {}
      - androidTest: {}
trigger_map:
  - push_branch: "*"
    pipeline: pipelineBuildTestDistribute
workflows:
  androidTest:
    steps:
      - activate-ssh-key@4.1:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@8.2: {}
      - set-java-version@1:
          inputs:
            - set_java_version: '17'
      - install-missing-android-tools@3.2: {}
      - android-build-for-ui-testing@0:
          inputs:
            - variant: "$BUILD_TYPE"
            - module: app
      - avd-manager@1:
          inputs:
            - tag: default
            - abi: x86_64
            - api_level: '34'
      - wait-for-android-emulator@1: {}
      - android-instrumented-test@0: {}
      - deploy-to-bitrise-io@2.7:
          title: Deploy build outputs to Bitrise.io
          inputs:
            - deploy_path: "$BITRISE_SOURCE_DIR/app/build/outputs"
            - notify_email_list: ''
      - deploy-to-bitrise-io@2.7:
          title: Deploy test reports to Bitrise.io
          inputs:
            - deploy_path: "$BITRISE_SOURCE_DIR/app/build/reports"
            - notify_email_list: ''
  build:
    steps:
      - activate-ssh-key@4.1:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@8.2: {}
      - set-java-version@1:
          inputs:
            - set_java_version: '17'
      - install-missing-android-tools@3.2: {}
      - android-build@1:
          inputs:
            - variant: "$BUILD_TYPE"
      - script@1.2:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x
                
                ./gradlew testDebug jacocoTestReport lintDebug buildDashboard
          title: Check
      - script@1:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
                set -o pipefail
                # debug log
                set -x
                
                echo $FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_JSON > $BITRISE_SOURCE_DIR/credentials.json
                export FIREBASE_APP_DISTRIBUTION_SERVICE_ACCOUNT_JSON=$BITRISE_SOURCE_DIR/credentials.json && ./gradlew appDistributionUploadDebug
          title: Distribute To Firebase
      - codecov@3:
          inputs:
            - OS: linux
            - CODECOV_TOKEN: "$CODECOV_TOKEN"
      - deploy-to-bitrise-io@2.7:
          title: Deploy test reports to Bitrise.io
          inputs:
            - deploy_path: "$BITRISE_SOURCE_DIR/app/build/reports/jacocoTestReport/"
            - notify_email_list: ''
      - custom-test-results-export@1:
          inputs:
            - search_pattern: "*/build/test-results/testDebugUnitTest/*"
            - test_name: tests
      - deploy-to-bitrise-io@2.7:
          title: Deploy APK to Bitrise.io
app:
  envs:
    - opts:
        is_expand: false
      GRADLE_BUILD_FILE_PATH: build.gradle
    - opts:
        is_expand: false
      BUILD_TYPE: debug
    - opts:
        is_expand: false
      GRADLEW_PATH: "./gradlew"